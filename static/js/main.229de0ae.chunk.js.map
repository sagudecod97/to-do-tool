{"version":3,"sources":["hooks/useLocalStorage.jsx","components/molecules/header/header.jsx","components/molecules/search-todo/search-todo.jsx","components/organisms/to-do-items/toDoItems.jsx","components/molecules/to-do-item/toDoItem.jsx","assets/images/iconmonstr-github-1.svg","components/molecules/add-todo/addToDo.jsx","components/atoms/add-btn/addBtn.jsx","components/molecules/add-modal/addModal.jsx","components/atoms/empty-todo/empty-todo.jsx","components/atoms/not-found/notFound.jsx","App.js","reportWebVitals.js","index.js"],"names":["UseLocalStorage","localStorage","window","useState","toDos","setToDos","loading","setIsLoading","filteredToDos","setFilteredTodos","isFiltering","setIsFiltering","useEffect","setTimeout","todosStorage","getItem","setItem","JSON","parse","addEventListener","filteredToDosArr","setNewToDo","newToDo","toDosArray","newTodoObj","todo","isDone","id","Math","random","splice","stringify","deleteToDo","toDoId","filteredArray","filter","arrToDo","checkAsDone","newToDoArray","map","newFilteredTodos","toDoToFilter","length","newToDos","toLowerCase","toDoItem","includes","eraseFilterButton","Header","children","className","SearchTodo","searchTodo","setSearchTodo","cleanSearchTodo","placeholder","type","value","onChange","disabled","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","ToDoItems","toDoItems","emptyTodos","notFoundTodo","filteredToDosList","loadingArray","i","push","ToDoItem","content","setIsDone","class","AddToDo","href","target","rel","src","GitHubLogo","alt","AddBtn","activeModal","AddModal","closeModal","createTodo","modalTodoValue","setModalTodoValue","ReactDom","createPortal","cols","rows","event","document","getElementById","EmptyTodo","NotFoundToDo","App","modalOpen","setModalOpen","toggleModal","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.229de0ae.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst UseLocalStorage = () => {\r\n    let { localStorage } = window;\r\n    let [ toDos, setToDos ] = useState([]);\r\n    let [ loading, setIsLoading ] = useState(true);\r\n    let [ filteredToDos, setFilteredTodos ] = useState([]);\r\n    let [ isFiltering, setIsFiltering ] = useState(false);\r\n    \r\n    const setNewToDo = (newToDo) => {\r\n        let toDosArray = localStorage.getItem('TODOS_ARR');\r\n        toDosArray = JSON.parse(toDosArray);\r\n\r\n        let newTodoObj = {\r\n            todo: newToDo,\r\n            isDone: false,\r\n            id: Math.random() * 10,\r\n        };\r\n\r\n        toDosArray.splice(0, 0, newTodoObj);\r\n        localStorage.setItem(\"TODOS_ARR\", JSON.stringify(toDosArray));\r\n        setToDos(toDosArray);\r\n    }\r\n\r\n    const deleteToDo = (toDoId) => {\r\n        let toDosArray = localStorage.getItem('TODOS_ARR');\r\n        toDosArray = JSON.parse(toDosArray);\r\n        let filteredArray = toDosArray.filter(arrToDo => arrToDo.id !== toDoId );\r\n        localStorage.setItem(\"TODOS_ARR\", JSON.stringify(filteredArray));\r\n        setToDos(filteredArray);\r\n    }\r\n\r\n    const checkAsDone = (id) => {\r\n        let toDosArray = localStorage.getItem('TODOS_ARR');\r\n        let newToDoArray = JSON.parse(toDosArray);\r\n\r\n        newToDoArray = newToDoArray.map(arrToDo => {\r\n            if (arrToDo.id === id) {\r\n                arrToDo.isDone = !arrToDo.isDone;\r\n            };\r\n\r\n            return arrToDo;\r\n        });\r\n\r\n        localStorage.setItem(\"TODOS_ARR\", JSON.stringify(newToDoArray));\r\n        setToDos(newToDoArray);\r\n    }\r\n\r\n    const newFilteredTodos = (toDoToFilter) => {\r\n        if (toDoToFilter.length === 0) {\r\n            return setIsFiltering(false);\r\n        }\r\n        \r\n        setIsFiltering(true);\r\n\r\n        let newToDos = [ ...toDos ];\r\n        toDoToFilter = toDoToFilter.toLowerCase();\r\n\r\n        newToDos = newToDos.filter(toDoItem => {\r\n            toDoItem = toDoItem.todo.toLowerCase();\r\n\r\n            return toDoItem.includes(toDoToFilter);\r\n        });\r\n        \r\n        setFilteredTodos(newToDos);\r\n    }\r\n\r\n    const eraseFilterButton = () => {\r\n        setFilteredTodos([]);\r\n        setIsFiltering(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n       setTimeout(() => {\r\n        let todosStorage = localStorage.getItem('TODOS_ARR');\r\n\r\n        if (!todosStorage) {\r\n            setIsLoading(false);\r\n            return localStorage.setItem('TODOS_ARR', '[]');\r\n        }\r\n\r\n        todosStorage = JSON.parse(todosStorage);\r\n\r\n        setIsLoading(false);\r\n        setToDos(todosStorage);\r\n       }, 3000)\r\n\r\n       window.addEventListener('storage', () => {\r\n            let todosStorage = localStorage.getItem('TODOS_ARR');\r\n            todosStorage = JSON.parse(todosStorage);\r\n            setToDos(todosStorage);\r\n        })\r\n\r\n    }, [ toDos ])\r\n\r\n    return({\r\n        toDos,\r\n        filteredToDosArr: [filteredToDos, isFiltering],\r\n        setNewToDo,\r\n        deleteToDo,\r\n        checkAsDone,\r\n        newFilteredTodos,\r\n        loading,\r\n        eraseFilterButton\r\n    })\r\n};\r\n\r\nexport default UseLocalStorage;\r\n","import React from 'react';\r\nimport './header.scss';\r\n\r\nconst Header = ({ loading, children }) => {\r\n    return(\r\n        <header className='header'>\r\n            <h1 className={`header__title ${loading ? '--loading' : '' }`}>Easy To-dos!</h1>\r\n            {\r\n                children\r\n            }\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './search-todo.scss';\r\n\r\nconst SearchTodo = ({ searchTodo, setSearchTodo, cleanSearchTodo, loading }) => {\r\n    return(\r\n        <div className='search-todo'>\r\n            <input\r\n            className={`search-todo__input ${loading ? '--loading-input' : ''}`}\r\n            placeholder='Search any to-do'\r\n            type='text'\r\n            value={searchTodo}\r\n            onChange={setSearchTodo}\r\n            disabled={loading}\r\n            />\r\n\r\n            {\r\n                searchTodo && (\r\n                    <button \r\n                    className='search-todo__button'\r\n                    onClick={cleanSearchTodo}\r\n                    >\r\n                        <svg\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        className='search-todo__icon' \r\n                        fill='none'\r\n                        viewBox='0 0 24 24' \r\n                        stroke='currentColor'\r\n                        >\r\n                            <path strokeLinecap='round' strokeLinejoin='round' strokeWidth={2} d='M6 18L18 6M6 6l12 12' />\r\n                        </svg>\r\n                    </button>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchTodo;\r\n","import React from 'react';\r\nimport './toDoItems.scss';\r\n\r\nconst ToDoItems = ({ children, toDoItems, filteredToDos, emptyTodos, notFoundTodo, loading }) => {\r\n    let [ filteredToDosList, isFiltering ] = filteredToDos;\r\n\r\n    let loadingArray = () => {\r\n        let loadingArray = [];\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            loadingArray.push({\r\n                todo: '',\r\n                isDone: false,\r\n                id: Math.random() * 10,\r\n            })\r\n        }\r\n\r\n        return loadingArray;\r\n    }\r\n\r\n    return(\r\n        <main className='todo-items'>\r\n            {\r\n                loading && loadingArray().map(children)\r\n            }\r\n            {\r\n                (!loading) && (isFiltering) && (filteredToDosList.length === 0) && notFoundTodo()\r\n            }\r\n            {\r\n                (!loading) && (toDoItems.length) === 0 && (!isFiltering) && emptyTodos()\r\n            }\r\n            {\r\n                (!loading) && (filteredToDosList.length > 0) && (isFiltering) && filteredToDosList.map(children)\r\n            }\r\n            {\r\n                (!loading) && (!isFiltering) && (toDoItems.length > 0) && toDoItems.map(children)\r\n            }   \r\n        </main>\r\n    );\r\n};\r\n\r\nexport default ToDoItems;\r\n","import React from 'react';\r\nimport './toDoItem.scss';\r\n\r\nconst ToDoItem = ({ content, id, deleteToDo, setIsDone, isDone, loading }) => {\r\n    const deleteToDoHandler = () => {\r\n        deleteToDo(id)\r\n    };\r\n\r\n    const setIsDoneHandler = () => {\r\n        setIsDone(id);\r\n    }\r\n\r\n    return(\r\n        <div\r\n        className={`todo-item ${isDone ? '--done': ''} ${loading ? '--loading-item' : ''}`}\r\n        >\r\n            <p className='todo-item__content'>{content}</p>\r\n            <button\r\n            onClick={deleteToDoHandler}\r\n            className={`todo-item__btn --close ${isDone ? '--done': ''}`}\r\n            >\r\n                <svg \r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                class=\"todo-item__close\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n            </button>\r\n\r\n            <button\r\n            onClick={setIsDoneHandler}\r\n            className={`todo-item__btn --check ${isDone ? '--done': ''}`}\r\n            >\r\n                <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                class=\"todo-item__check\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\r\n                </svg>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoItem;\r\n","export default __webpack_public_path__ + \"static/media/iconmonstr-github-1.04be58c1.svg\";","import React from 'react';\r\nimport './addToDo.scss';\r\n\r\nimport GitHubLogo from '../../../assets/images/iconmonstr-github-1.svg';\r\n\r\nconst AddToDo = ({ children }) => {\r\n    return(\r\n        <footer className='add-todo'>\r\n            <div className='add-todo__info'>\r\n                <p className='add-todo__name'>Santiago Agudelo Alvarez</p>\r\n\r\n                <a\r\n                href='https://github.com/sagudecod97/to-do-tool'\r\n                className='add-todo__container'\r\n                target='_blank'\r\n                rel=\"noreferrer\"\r\n                >\r\n                    <img src={GitHubLogo} alt=\"Santiago's GitHub\" />\r\n                </a>\r\n            </div>\r\n            {\r\n                children\r\n            }\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default AddToDo;\r\n","import React from './addBtn.scss';\r\nimport './addBtn.scss';\r\n\r\nconst AddBtn = ({ onClick, activeModal, loading }) => {\r\n    return(\r\n        <button \r\n        className={`add-btn ${activeModal ? '--rotated' : ''}`}\r\n        onClick={onClick}\r\n        disabled={loading}\r\n        >\r\n            <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            class=\"add-btn__plus\"\r\n            fill=\"none\" \r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            >\r\n            <   path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\" />\r\n            </svg>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default AddBtn;\r\n","import React, { useState } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './addModal.scss';\r\n\r\nconst AddModal = ({ closeModal, createTodo }) => {\r\n    let [ modalTodoValue, setModalTodoValue ] = useState('');\r\n\r\n    const modalValueHandler = (event) => {\r\n        let { value } = event.target;\r\n        setModalTodoValue(value);\r\n    };\r\n\r\n    const createTodoHandler = () => {\r\n        createTodo(modalTodoValue);\r\n        setModalTodoValue('');\r\n        closeModal();\r\n    };\r\n\r\n    return(\r\n        ReactDom.createPortal(\r\n        <div className='add-modal'>\r\n            <div className='modal__container'>\r\n                <button\r\n                className='modal__close'\r\n                onClick={closeModal}\r\n                >\r\n                    <svg\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                    class='modal__icon'\r\n                    fill='none'\r\n                    viewBox='0 0 24 24'\r\n                    stroke='currentColor'\r\n                    >\r\n                        <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 18L18 6M6 6l12 12' />\r\n                    </svg>\r\n                </button>\r\n                <h3 className='modal__title'>Add your to-do</h3>\r\n\r\n                <textarea\r\n                className='modal__text' \r\n                cols=\"30\"\r\n                rows=\"10\"\r\n                value={modalTodoValue}\r\n                onChange={modalValueHandler}\r\n                ></textarea>\r\n\r\n                <button\r\n                className='modal__btn --cancel'\r\n                onClick={closeModal}\r\n                >\r\n                    Cancel\r\n                </button>\r\n                <button\r\n                className='modal__btn --accept'\r\n                onClick={createTodoHandler}\r\n                >\r\n                    Add to-do\r\n                </button>\r\n            </div>\r\n        </div>\r\n        , document.getElementById('portal'))\r\n    );\r\n};\r\n\r\nexport default AddModal;\r\n","import React from 'react';\r\nimport './empty-todo.scss';\r\n\r\nconst EmptyTodo = () => {\r\n    return(\r\n        <div className='empty-todo'>\r\n            <h3\r\n            className='empty-todo__title'\r\n            >\r\n                There is not any to-do. <br/>\r\n                What about adding some?\r\n            </h3>\r\n\r\n            <svg\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            class='empty-todo__smile'\r\n            fill='none'\r\n            viewBox='0 0 24 24'\r\n            stroke='currentColor'>\r\n                <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z' />   \r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmptyTodo;\r\n","import React from 'react';\r\nimport './notFound.scss';\r\n\r\nconst NotFoundToDo = () => {\r\n\r\n    return(\r\n        <div className='not-found'>\r\n            <h3\r\n            className='not-found__title'\r\n            >\r\n                Sorry, could not find the to-do.\r\n            </h3>\r\n\r\n            <svg\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            class='not-found__sad'\r\n            fill='none'\r\n            viewBox='0 0 24 24'\r\n            stroke='currentColor'\r\n            >\r\n                <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z' />\r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFoundToDo;\r\n","import './App.css';\r\nimport React, { useState } from 'react';\r\nimport './styles/index.scss';\r\n\r\nimport UseLocalStorage from './hooks/useLocalStorage';\r\n\r\nimport Header from './components/molecules/header/header';\r\nimport SearchTodo from './components/molecules/search-todo/search-todo';\r\nimport ToDoItems from './components/organisms/to-do-items/toDoItems';\r\nimport ToDoItem from './components/molecules/to-do-item/toDoItem';\r\nimport AddToDo from './components/molecules/add-todo/addToDo';\r\nimport AddBtn from './components/atoms/add-btn/addBtn';\r\nimport AddModal from './components/molecules/add-modal/addModal';\r\nimport EmptyTodo from './components/atoms/empty-todo/empty-todo';\r\nimport NotFoundToDo from './components/atoms/not-found/notFound';\r\n\r\nfunction App() {\r\n  let [ searchTodo, setSearchTodo ] = useState('');\r\n  let [ modalOpen, setModalOpen ] = useState(false);\r\n\r\n  let { \r\n    toDos,\r\n    filteredToDosArr,\r\n    setNewToDo,\r\n    deleteToDo,\r\n    newFilteredTodos,\r\n    checkAsDone,\r\n    loading,\r\n    eraseFilterButton,\r\n  } = UseLocalStorage();\r\n\r\n  const setSearchTodoHandler = (event) => {\r\n    const { value } = event.target;\r\n    newFilteredTodos(value);\r\n    setSearchTodo(value);\r\n  }\r\n\r\n  const toggleModal = () => setModalOpen(!modalOpen);\r\n\r\n\r\n  const cleanSearchTodo = () => {\r\n    setSearchTodo('');\r\n    eraseFilterButton();\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header\r\n      loading={loading}\r\n      >\r\n        <SearchTodo\r\n        loading={loading}\r\n        setSearchTodo={setSearchTodoHandler}\r\n        searchTodo={searchTodo}\r\n        cleanSearchTodo={cleanSearchTodo}\r\n        />\r\n      </Header>\r\n\r\n      <ToDoItems \r\n      toDoItems={toDos}\r\n      filteredToDos={filteredToDosArr}\r\n      emptyTodos={() => <EmptyTodo />}\r\n      notFoundTodo={() => <NotFoundToDo />}\r\n      loading={loading}\r\n      >\r\n        {\r\n          item => {\r\n            return(\r\n              <ToDoItem \r\n              key={item.id}\r\n              id={item.id}\r\n              isDone={item.isDone}\r\n              setIsDone={checkAsDone}\r\n              deleteToDo={deleteToDo}\r\n              content={item.todo}\r\n              loading={loading}\r\n              />\r\n            )\r\n          }\r\n        }\r\n      </ToDoItems>\r\n\r\n      <AddToDo>\r\n        <AddBtn\r\n        loading={loading}\r\n        onClick={toggleModal}\r\n        />\r\n      </AddToDo>\r\n\r\n      {\r\n        modalOpen && (\r\n          <AddModal\r\n          closeModal={toggleModal}\r\n          createTodo={setNewToDo}\r\n          />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}